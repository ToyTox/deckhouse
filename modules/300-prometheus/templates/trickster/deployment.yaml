{{- if (.Values.global.enabledModules | has "vertical-pod-autoscaler-crd") }}
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: trickster
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "trickster")) | indent 2 }}
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: trickster
  updatePolicy:
    updateMode: "Auto"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trickster
  namespace: d8-monitoring
{{ include "helm_lib_module_labels" (list . (dict "app" "trickster")) | indent 2 }}
spec:
{{- include "helm_lib_deployment_strategy_and_replicas_for_ha" . | indent 2 }}
  selector:
    matchLabels:
      app: trickster
  template:
    metadata:
      labels:
        app: trickster
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/trickster/configmap.yaml") . | sha256sum }}
    spec:
{{- include "helm_lib_node_selector" (tuple . "monitoring") | indent 6 }}
{{- include "helm_lib_tolerations" (tuple . "monitoring") | indent 6 }}
{{- include "helm_lib_priority_class" (tuple . "cluster-medium") | indent 6 }}
{{- include "helm_lib_pod_anti_affinity_for_ha" (list . (dict "app" "trickster")) | indent 6 }}
{{- include "helm_lib_module_pod_security_context_run_as_user_nobody" . | indent 6 }}
      serviceAccountName: trickster
      containers:
      - name: trickster
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ $.Values.global.modulesImages.registry }}:{{ $.Values.global.modulesImages.tags.prometheus.trickster }}
        volumeMounts:
        - mountPath: /etc/trickster/trickster.conf
          name: trickster-config
          subPath: trickster.conf
        - mountPath: /etc/trickster/ssl/
          name: prometheus-api-client-tls
          readOnly: true
        livenessProbe:
          httpGet:
            path: /trickster/trickster/health/main
            port: 8443
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /trickster/trickster/health/main
            port: 8443
            scheme: HTTPS
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_logs_with_extra" 10 | indent 12 }}
      - name: kube-rbac-proxy
{{- include "helm_lib_module_container_security_context_read_only_root_filesystem" . | indent 8 }}
        image: {{ .Values.global.modulesImages.registry }}:{{ .Values.global.modulesImages.tags.common.kubeRbacProxy }}
        args:
        - "--secure-listen-address=$(KUBE_RBAC_PROXY_LISTEN_ADDRESS):8443"
        - "--client-ca-file=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        - "--v=2"
        - "--logtostderr=true"
        - "--stale-cache-interval=1h30m"
        ports:
        - containerPort: 8443
          name: https
        env:
        - name: KUBE_RBAC_PROXY_LISTEN_ADDRESS
          value: "0.0.0.0"
        - name: KUBE_RBAC_PROXY_CONFIG
          value: |
            ignorePaths:
            - /trickster/trickster/ping
            - /trickster/trickster/health/main
            upstreams:
            - upstream: http://127.0.0.1:8000/
              path: /trickster/
              authorization:
                resourceAttributes:
                  namespace: d8-monitoring
                  apiGroup: apps
                  apiVersion: v1
                  resource: deployments
                  subresource: http
                  name: trickster
            - upstream: http://127.0.0.1:8001/metrics
              path: /metrics
              authorization:
                resourceAttributes:
                  namespace: d8-monitoring
                  apiGroup: apps
                  apiVersion: v1
                  resource: deployments
                  subresource: prometheus-metrics
                  name: trickster
        resources:
          requests:
{{- include "helm_lib_module_ephemeral_storage_only_logs" . | indent 12 }}
      volumes:
      - name: trickster-config
        configMap:
          name: trickster-config
      - name: prometheus-api-client-tls
        secret:
          secretName: prometheus-api-client-tls
      imagePullSecrets:
      - name: deckhouse-registry
